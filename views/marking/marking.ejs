<!DOCTYPE html>
<html>
  <head>
    <%- include("../include/_head", {title: "Marking"}) %>
    <style>
      #modal-overlay {
        z-index: 1;
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.75);
      }
      #modal-content {
        width: 80%;
        height: 80%;
        margin: 1em auto;
        padding: 1em;
        background: #fff;
        overflow: scroll;
      }
      #modal-content div {
        border: solid;
      }
      #old_feedback {
        display: none;
      }
      #fb_edit textarea {
        width: 95%;
        height: 5em;
        margin: 0 auto;
      }
      #fb_sample .del_button {
        float: right;
      }
      #fb_sample .del_button + * {
        clear: both;
      }
      main {
        width: 700px;
      }
      .select-wrapper {
        display: inline-block;
      }
      pre {
        white-space: pre-wrap;
      }
    </style>
    <script>
      function search() {
        let url = '<%=baseUrl%>marking/marking';
        url += `?course=${document.querySelector('#courses').value}`;
        url += `&label=${document.querySelector('#excercises').value}`;
        url += `&student=${document.querySelector('#students').value}`;
        location.href=encodeURI(url);
      }
      function mark() { // 採点結果を記録するだけ
        let url = '<%=baseUrl%>marking/marking_mark';
        url += `?course=${document.querySelector('#courses').value}`;
        url += `&label=${document.querySelector('#excercises').value}`;
        url += `&student=${document.querySelector('#students').value}`;
        url += `&mark=${document.querySelector('#mark').value}`;
        url += `&feedback=${encodeURIComponent(document.querySelector('#feedback').textContent)}`;
        location.href=encodeURI(url);
      }
      function mark2() { // 採点結果を記録して次の学生へ移動
        const select = document.querySelector('#students');
        const current_student = select.value;
        if (select.selectedIndex < (select.length - 1))
          select.selectedIndex++;
        else
          select.selectedIndex=0;
        let next_student = select.value;
        let url = '<%=baseUrl%>marking/marking_mark';
        url += `?course=${document.querySelector('#courses').value}`;
        url += `&label=${document.querySelector('#excercises').value}`;
        url += `&student=${current_student}`;
        url += `&mark=${document.querySelector('#mark').value}`;
        url += `&feedback=${encodeURIComponent(document.querySelector('#feedback').textContent)}`;
        url += `&next_student=${next_student}`;
        location.href=encodeURI(url);
      }
      function mark3() { // 採点結果を記録して次の採点が必要な学生へ移動
        const next_student = "<%=need_mark_student_post%>";
        let url = '<%=baseUrl%>marking/marking_mark';
        url += `?course=${document.querySelector('#courses').value}`;
        url += `&label=${document.querySelector('#excercises').value}`;
        url += `&student=${document.querySelector('#students').value}`;
        url += `&mark=${document.querySelector('#mark').value}`;
        url += `&feedback=${encodeURIComponent(document.querySelector('#feedback').textContent)}`;
        url += `&next_student=${next_student}`;
        location.href=encodeURI(url);
      }
      function pre_student() {
        const select = document.querySelector('#students');
        if (select.selectedIndex > 0)
          select.selectedIndex--;
        else
          select.selectedIndex= (select.length - 1);
        search();
      }
      function post_student() {
        const select = document.querySelector('#students');
        if (select.selectedIndex < (select.length - 1))
          select.selectedIndex++;
        else
          select.selectedIndex=0;
        search();
      }
      function pre_need_student() {
        const select = document.querySelector('#students');
        const pre_student = "<%=need_mark_student_pre%>";
        if (!pre_student) return;
        let s=0;
        for (let i=0;i<select.length;i++) {
          if (select.options[i].value===pre_student) {
            s = i;
            break;
          }
        }
        select.selectedIndex=s;
        search();
      }
      function post_need_student() {
        const select = document.querySelector('#students');
        const post_student = "<%=need_mark_student_post%>";
        if (!post_student) return;
        let s=0;
        for (let i=0;i<select.length;i++) {
          if (select.options[i].value===post_student) {
            s = i;
            break;
          }
        }
        select.selectedIndex=s;
        search();
      }
      function init() {
        const select1 = document.querySelector('#courses');
        select1.addEventListener('change',(e)=>{search();});
        const select2 = document.querySelector('#excercises');
        select2.addEventListener('change',(e)=>{search();});
        const select3 = document.querySelector('#students');
        select3.addEventListener('change',(e)=>{search();});
        const question = '<%=question_url%>';
        const submit = '<%=submit_url%>';
        if (question)
          window.open(question,'question');
        if (submit)
          window.open(submit,'submit');
        document.querySelector('#mark').focus();
      }
      window.addEventListener('load',init);

      function modal_open() {
        //const fb = document.querySelector("#feedback");
        //const fb_e = document.querySelector("#fb");
        //fb_e.textContent = fb.textContent;
        document.querySelector("#modal_open_button").blur();
        document.querySelector("#modal-overlay").style.display="block";
      }
      function modal_close() {
        const fb_e = document.querySelector("#fb");
        const fb = document.querySelector("#feedback");
        fb.textContent = fb_e.textContent;
        document.querySelector("#fb_textarea").value='';
        document.querySelector("#modal_close_button").blur();
        document.querySelector("#modal-overlay").style.display="none";
      }
      function modal_close2() {
        document.querySelector("#fb_textarea").value='';
        document.querySelector("#modal_close_button").blur();
        document.querySelector("#modal-overlay").style.display="none";
      }
      function check_old_fb() {
        alert(document.querySelector("#old_feedback").textContent);
      }
      function clear_fb() {
        document.querySelector("#fb").textContent = "";
      }
      function add_fb() {
        const fb = document.querySelector("#fb_textarea").value;
        document.querySelector("#fb").textContent += fb;
      }
      async function add_fb_example() {
        const fb = encodeURIComponent(document.querySelector("#fb_textarea").value);
        let url = '<%=baseUrl%>marking/feedback_reserve';
        url += '?excercise_id=<%=excercise._id%>';
        url += `&feedback=${fb}`;
        const r = await fetch(url);
        const reserved = await r.json();
        if (reserved.result!=='ok') {
          alert("network error!?");
          return;
        }
        const fb_sample = document.querySelector("#fb_sample");
        const div = document.createElement('div');
        div.setAttribute('id','fb'+reserved.feedback_id);
        fb_sample.appendChild(div);
        const p = document.createElement('pre');
        p.textContent = reserved.feedback;
        div.appendChild(p);
        const b2 = document.createElement('button');
        b2.appendChild(document.createTextNode("編集欄へ"));
        b2.addEventListener('click',function(e) {
          copy_example(reserved.feedback_id);
        });
        div.appendChild(b2);
        const b3 = document.createElement('button');
        b3.appendChild(document.createTextNode("今回のフィードバックへ直接追加"));
        b3.addEventListener('click',function(e) {
          copy_example_to_new_fb(reserved.feedback_id);
        });
        div.appendChild(b2);
        const b1 = document.createElement('button');
        b1.setAttribute('class','del_button');
        b1.appendChild(document.createTextNode("削除"));
        b1.addEventListener('click',function(e) {
          del_example(reserved.feedback_id);
        });
        div.appendChild(b1);
      }
      async function del_example(fid) {
        let confirmed = window.confirm('本当にコメントを削除してよろしいですか？');
        if (!confirmed) return;
        confirmed = window.confirm('本当に本当にコメントを削除してよろしいですか？');
        if (!confirmed) return;
        let url = '<%=baseUrl%>marking/feedback_del';
        url += `?feedback_id=${fid}`;
        const res = await fetch(url);
        const result = await res.json();
        if (result.result==='ok') {
          const fb_sample = document.querySelector("#fb_sample");
          const div = document.querySelector(`#fb${fid}`);
          fb_sample.removeChild(div);
        } else {
          alert("network error!?");
        }
      }
      async function copy_example(fid) {
        const f = document.querySelector(`#fb${fid}`);
        const t = f.querySelector('pre').textContent;
        const fb = document.querySelector("#fb_textarea");
        fb.value = t;
        let url = '<%=baseUrl%>marking/feedback_countup';
        url += `?feedback_id=${fid}`;
        const r = await fetch(url);
        const reserved = await r.json();
        if (reserved.result!=='ok') {
          alert("network error!?");
          return;
        }
      }
      async function copy_example_to_new_fb(fid) {
        const f = document.querySelector(`#fb${fid}`);
        const t = f.querySelector('pre').textContent;
        const fb = document.querySelector("#fb");
        fb.textContent += t;
        let url = '<%=baseUrl%>marking/feedback_countup';
        url += `?feedback_id=${fid}`;
        const r = await fetch(url);
        const reserved = await r.json();
        if (reserved.result!=='ok') {
          alert("network error!?");
          return;
        }
      }
    </script>
  </head>
  <body>
    <%- include("../include/_header") %>
    <div class="main-wrapper">
    <%- include("../include/_nav_main.ejs") %>
      <main>
        <h1>Marking</h1>
        <p>Message: <%=msg %></p>
        <p>Courses:
          <select id="courses">
            <option value="">select for course</option>
            <% for (const c of courses) { %>
              <% if (c.id===course) { %>
                <option value="<%= c.id %>" selected="true"><%= c.name %></option>
              <% } else { %>
                <option value="<%= c.id %>"><%= c.name %></option>
              <% } %>
            <% } %>
          </select>
        </p>
        <p>Excecise:
          <select id="excercises">
            <option value="">select for excercise</option>
            <% for (const e of excercises) { %>
              <% if (e.label===label) { %>
                <option value="<%= e.label %>" selected="true"><%= e.label %></option>
              <% } else { %>
                <option value="<%= e.label %>"><%= e.label %></option>
              <% } %>
            <% } %>
          </select>
          問題カテゴリー:<%=excercise.category%>、重み(難易度)<%=excercise.weight%>、
          <a href="<%=question_url%>" target="question">問題</a>
        </p>
        <% if (need_mark_student_no===0) { %>
        <p>採点が必要な学生<%=need_mark%>人。</p>
        <% } else { %>
        <p>採点が必要な学生<%=need_mark%>人中の<%=need_mark_student_no%>番目の学生</p>
        <% } %>
        <p>
          Student:
          <button type="button" onclick="pre_need_student()">&lt;&lt;</button>
          <button type="button" onclick="pre_student()">&lt;</button>
          前の学生
          <select id="students">
            <% for (const s of students) { %>
              <% if (s.account===student) { %>
                <option value="<%= s.account %>" selected="true"><%= s.account %></option>
              <% } else { %>
                <option value="<%= s.account %>"><%= s.account %></option>
              <% } %>
            <% } %>
          </select>
          次の学生
          <button type="button" onclick="post_student()">&gt;</button>
          <button type="button" onclick="post_need_student()">&gt;&gt;</button>
          <a href="<%=submit_url%>" target="submit">提出課題</a>。
        </p>
        <hr/>
        <p>課題の状態：<%=mark.status%></p>
        <p>課題のメモ：<span style="color:red;"><%=excercise.memo%></span></p>
        <p>評点:<input id="mark" type="text" size="5" value="<%=mark.mark%>"/>
          (配点:<%=excercise.point%>点中)</p>
        <p>フィードバックコメント:</p>
        <div><button type="button" onclick="check_old_fb()">過去のフィードバック</button></div>
        <div>今回のフィードバック：<pre id="feedback"><%=last_feedback%></pre></div>
        <p><button id="modal_open_button" type="button" onclick="modal_open()">Edit Feedback</button></p>
        <p>
          <button type="button" onclick="mark()">Mark</button>
          <button type="button" onclick="mark2()">Mark&gt;</button>
          <button type="button" onclick="mark3()">Mark&gt;&gt;</button>
        </p>
        <hr/>
        <p><a href="<%=baseUrl %>/">Back to research-ground top.</a></p>
        <div id="modal-overlay">
          <div id="modal-content">
            <h2>Edit Feedback</h2>
            <p><button id="modal_cancel_button" type="button" onclick="modal_close2()">キャンセル</button>
              <button id="modal_close_button" type="button" onclick="modal_close()">編集終了</button>
              <button type="button" onclick="check_old_fb()">過去のFBを確認</button>
            </p>
            <pre id="old_feedback">過去のフィードバック(下の方が新しい)
    <% for (const fb of mark.feedbacks) { %>
    ----------
    <%=fb%>
    <% } %>
            </pre>
            <div id="fb_now">
              <p>今回のフィードバック<button type="button" onclick="clear_fb()">クリア</button></p>
              <hr/>
              <pre id="fb"><%=mark.feedback%></pre>
            </div>
            <div id="fb_edit">
              <p>編集欄</p>
              <textarea id="fb_textarea"><%=last_feedback%></textarea>
              <p><button type="button" onclick="add_fb()">今回のフィードバックに追加</button>
                <button type="button" onclick="add_fb_example()">フィードバック例に追加</button></p>
            </div>
            <div id="fb_sample">
              <p>フィードバック例:</p>
              <% for (const fb of feedbacks) { %>
              <div id="fb<%=fb._id%>">
                <pre><%=fb.feedback%></pre>
                <button type="button" onclick="copy_example('<%=fb._id%>')">編集欄へ</button>
                <button type="button" onclick="copy_example_to_new_fb('<%=fb._id%>')">今回のフィードバックへ直接追加</button>
                <button type="button" class="del_button" onclick="del_example('<%=fb._id%>')">削除</button>
              </div>
              <% } %>
            </div>
          </div>
        </div>
      </main>
    </div>
  </body>
</html>
